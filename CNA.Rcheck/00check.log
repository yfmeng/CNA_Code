* using log directory ‘/Users/feimeng/CNA_Code/CNA.Rcheck’
* using R version 3.0.2 (2013-09-25)
* using platform: x86_64-apple-darwin10.8.0 (64-bit)
* using session charset: UTF-8
* checking for file ‘CNA/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘CNA’ version ‘1.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘CNA’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  Artistic Lisence
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... WARNING
‘library’ or ‘require’ calls not declared from:
  ‘network’ ‘plyr’ ‘sna’
See the information on DESCRIPTION files in the chapter ‘Creating R
packages’ of the ‘Writing R Extensions’ manual.
* checking S3 generic/method consistency ... WARNING
summary:
  function(object, ...)
summary.cna:
  function(g, attribute.name, ...)

simulate:
  function(object, nsim, seed, ...)
simulate.asymmetric:
  function(size, distribution, preferred, sd, sym, ...)

See section ‘Generic functions and methods’ of the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
assort.Farrington: no visible global function definition for
  ‘as.edgelist.sna’
assort.Farrington: no visible global function definition for
  ‘get.vertex.attribute’
assort.Farrington: no visible global function definition for
  ‘get.edge.attribute’
assort.Farrington: no visible global function definition for
  ‘network.size’
assort.Gupta: no visible global function definition for
  ‘as.edgelist.sna’
assort.Gupta: no visible global function definition for
  ‘get.vertex.attribute’
assort.Gupta: no visible global function definition for
  ‘get.edge.attribute’
assort.Newman: no visible global function definition for
  ‘as.edgelist.sna’
assort.Newman: no visible global function definition for
  ‘get.vertex.attribute’
assort.Newman: no visible global function definition for
  ‘get.edge.attribute’
assort.Newman: no visible global function definition for ‘network.size’
bridge: no visible global function definition for ‘as.edgelist.sna’
bridge: no visible global function definition for
  ‘get.vertex.attribute’
bridge: no visible global function definition for ‘get.edge.attribute’
find.neighbour: no visible global function definition for
  ‘as.edgelist.sna’
list2network: no visible global function definition for ‘as.network’
list2network: no visible global function definition for
  ‘network.vertex.names’
list2network: no visible binding for global variable ‘node.attr’
list2network: no visible global function definition for
  ‘set.vertex.attribute’
list2network: no visible global function definition for
  ‘set.edge.attribute’
normDataWithin: no visible global function definition for ‘ddply’
sampling: no visible binding for global variable ‘id.names’
sampling: no visible binding for global variable ‘initial’
sampling: no visible binding for global variable ‘init’
sampling: no visible global function definition for ‘neighbour’
sampling: no visible binding for global variable ‘n.end’
simulate.asymmetric: no visible binding for global variable ‘shape’
summary.cna: no visible global function definition for
  ‘as.edgelist.sna’
summary.cna: no visible global function definition for
  ‘get.vertex.attribute’
summary.cna: no visible binding for global variable ‘bipart’
summarySE: no visible global function definition for ‘ddply’
summarySE: no visible global function definition for ‘rename’
* checking Rd files ... WARNING
prepare_Rd: CNA-package.Rd:38-39: Dropping empty section \references
prepare_Rd: CNA-package.Rd:42-43: Dropping empty section \seealso
prepare_Rd: assort.Farrington.Rd:48-50: Dropping empty section \note
prepare_Rd: assort.Farrington.Rd:58-60: Dropping empty section \examples
prepare_Rd: assort.Gupta.Rd:46-48: Dropping empty section \note
prepare_Rd: assort.Gupta.Rd:56-58: Dropping empty section \examples
prepare_Rd: assort.Newman.Rd:32-34: Dropping empty section \details
prepare_Rd: assort.Newman.Rd:45-47: Dropping empty section \note
prepare_Rd: assort.Newman.Rd:55-57: Dropping empty section \examples
prepare_Rd: bridge.Rd:41-43: Dropping empty section \note
prepare_Rd: bridge.Rd:35-37: Dropping empty section \references
prepare_Rd: bridge.Rd:50-52: Dropping empty section \examples
prepare_Rd: contact.beta.Rd:40-42: Dropping empty section \details
prepare_Rd: contact.beta.Rd:53-55: Dropping empty section \note
prepare_Rd: contact.beta.Rd:50-52: Dropping empty section \author
prepare_Rd: contact.beta.Rd:47-49: Dropping empty section \references
prepare_Rd: contact.beta.Rd:59-61: Dropping empty section \seealso
prepare_Rd: contact.beta.Rd:62-63: Dropping empty section \examples
prepare_Rd: fc.Rd:38-40: Dropping empty section \details
prepare_Rd: fc.Rd:58-60: Dropping empty section \note
prepare_Rd: fc.Rd:64-66: Dropping empty section \seealso
prepare_Rd: fc.Rd:67-68: Dropping empty section \examples
prepare_Rd: find.neighbour.Rd:27-29: Dropping empty section \details
prepare_Rd: find.neighbour.Rd:39-41: Dropping empty section \note
prepare_Rd: find.neighbour.Rd:33-35: Dropping empty section \references
prepare_Rd: list2matrix.Rd:8-9: Dropping empty section \description
prepare_Rd: list2matrix.Rd:27-29: Dropping empty section \details
prepare_Rd: list2matrix.Rd:39-41: Dropping empty section \note
prepare_Rd: list2matrix.Rd:33-35: Dropping empty section \references
prepare_Rd: list2matrix.Rd:45-47: Dropping empty section \seealso
checkRd: (5) list2matrix.Rd:0-60: Must have a \description
prepare_Rd: matrix2list.Rd:68: Dropping empty section \keyword
prepare_Rd: matrix2list.Rd:29-31: Dropping empty section \details
prepare_Rd: matrix2list.Rd:41-43: Dropping empty section \note
prepare_Rd: matrix2list.Rd:35-37: Dropping empty section \references
prepare_Rd: matrix2list.Rd:47-48: Dropping empty section \seealso
prepare_Rd: sampling.Rd:29-31: Dropping empty section \details
prepare_Rd: sampling.Rd:41-43: Dropping empty section \note
prepare_Rd: sampling.Rd:35-37: Dropping empty section \references
prepare_Rd: sampling.method.Rd:41-43: Dropping empty section \note
prepare_Rd: sampling.method.Rd:35-37: Dropping empty section \references
prepare_Rd: sampling.method.Rd:51-52: Dropping empty section \examples
prepare_Rd: sd.jackknife.Rd:39-41: Dropping empty section \details
prepare_Rd: sd.jackknife.Rd:51-53: Dropping empty section \note
prepare_Rd: sd.jackknife.Rd:45-47: Dropping empty section \references
prepare_Rd: sd.jackknife.Rd:64: Dropping empty section \examples
sd.kappa.Rd: non-ASCII input and no declared encoding
problem found in ‘sd.kappa.Rd’
* checking Rd metadata ... OK
* checking Rd cross-references ... WARNING
Missing link or links in documentation object ‘/Users/feimeng/CNA_Code/CNA.Rcheck/00_pkg_src/CNA/man/bridge.Rd’:
  ‘summary.bridge’

Missing link or links in documentation object ‘/Users/feimeng/CNA_Code/CNA.Rcheck/00_pkg_src/CNA/man/sampling.method.Rd’:
  ‘neighbour’

See the information in section ‘Cross-references’ of the ‘Writing R
Extensions’ manual.

* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘assort.FarringtonC’ ‘convert’ ‘degree’ ‘list2network’
  ‘normDataWithin’ ‘simulate.asymmetric’ ‘summary.cna’ ‘summarySE’
  ‘summarySEwithin’
Undocumented data sets:
  ‘relationship’
All user-level objects in a package should have documentation entries.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Functions or methods with usage in documentation object 'find.neighbour' but not in code:
  neighbour

Codoc mismatches from documentation object 'bridge':
bridge
  Code: function(g, attribute.name, gap, ...)
  Docs: function(g, attribute.name, gap...)
  Argument names in code not in docs:
    gap ...
  Argument names in docs not in code:
    gap...
  Mismatches in argument names:
    Position: 3 Code: gap Docs: gap...

Codoc mismatches from documentation object 'sampling':
sampling
  Code: function(g, method, ...)
  Docs: function(id.names, data, method, ...)
  Argument names in code not in docs:
    g
  Argument names in docs not in code:
    id.names data
  Mismatches in argument names:
    Position: 1 Code: g Docs: id.names
    Position: 2 Code: method Docs: data
    Position: 3 Code: ... Docs: method

Codoc mismatches from documentation object 'sd.kappa':
sd.kappa
  Code: function(x1, x2, contact, data, cate, ...)
  Docs: function(x1, x2, contact, data, cate, method, ...)
  Argument names in docs not in code:
    method
  Mismatches in argument names:
    Position: 6 Code: ... Docs: method

* checking Rd \usage sections ... WARNING
Documented arguments not in \usage in documentation object 'assort.Gupta':
  ‘contact’ ‘cate’

Documented arguments not in \usage in documentation object 'assort.Newman':
  ‘cate’ ‘directed’

Undocumented arguments in documentation object 'bridge'
  ‘gap...’

Undocumented arguments in documentation object 'find.neighbour'
  ‘root.nodes’
Documented arguments not in \usage in documentation object 'find.neighbour':
  ‘root.node’
Objects in \usage without \alias in documentation object 'find.neighbour':
  ‘neighbour’

Undocumented arguments in documentation object 'sampling'
  ‘...’
Documented arguments not in \usage in documentation object 'sampling':
  ‘initial’

Undocumented arguments in documentation object 'sd.kappa'
  ‘method’

Bad \usage lines found in documentation object 'assort.Farrington':
  assort.Newman(g,attribute.name,directed = T,bi=c(T,bi.name) ...)

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... ERROR
Running examples in ‘CNA-Ex.R’ failed
The error most likely occurred in:

> ### Name: CNA-package
> ### Title: Contact Network Assortativeness
> ### Aliases: CNA CNA
> ### Keywords: package
> 
> ### ** Examples
>  
> # let data frame r be an edge list dataset of 
> # a small heterosexual contact network with 7 males and 7 females
> male.id<-c(1, 2, 3, 4, 4, 5, 5, 6, 7)
> female.id<-c(8, 9, 10, 10, 11, 12, 10, 13, 14)
> male.age <- c(15, 20, 18, 40, 40, 26, 26, 25, 23)
> female.age <- c(19, 14, 15, 15, 45, 24, 15, 25, 22)
> contact<-c(1, 1.2, 0.5, 0.2, 0.8, 1.4, 1, 2, 1.1)
> r<-data.frame(male.id,female.id, male.age,female.age,contact)
> 
> # thus the data frame r is an edge list of the network
> #  male.id female.id male.age female.age contact
> #       1         8       15         19     1.0
> #       2         9       20         14     1.2
> #       3        10       18         15     0.5
> #       4        10       40         15     0.2
> #       4        11       40         45     0.8
> #       5        12       26         24     1.4
> #       5        10       26         15     1.0
> #       6        13       25         25     2.0
> #       7        14       23         22     1.1
> 
> # in order to examine the assortativeness between age groups, 
> # divide the population into 5-year age groups
> cate<-seq(10,50,5)
> directed<-TRUE
> 
> # calculate the assortative coefficients using different methods
> assort.Gupta(male.age,female.age,contact,cate,data=r,directed)
Loading required package: network
network: Classes for Relational Data
Version 1.9.0 created on 2014-01-03.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

Loading required package: sna
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

The following object is masked from ‘package:CNA’:

    degree

Error in as.edgelist.sna(g) : 
  as.edgelist.sna input must be an adjacency matrix/array, edgelist matrix, network, or sparse matrix, or list thereof.
Calls: assort.Gupta -> as.edgelist.sna
Execution halted
